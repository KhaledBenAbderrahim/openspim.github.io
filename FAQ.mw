= Camera issues =

== I get the error that a core property is read-only? ==

Due to a bug in the HamamatsuHam driver (which is not Open Source, unfortunately, otherwise we could try to fix things), the error messages are not quite stellar. They are even outright misleading.

The issue, most likely, is that Fiji reserves so much RAM for its own use that the Hamamatsu driver is unable to reserve space for its image buffers.

Just go to Edit>Options>Memory & Threads... and limit the RAM Fiji uses to, say, 1GB. Restart Fiji, and all should be fine.

= Community =

== How to share images? ==

We use [http://labs.bittorrent.com/experiments/sync.html BitTorrent Sync] to have a shared directory of images and stuff. After installing BitTorrent Sync, you will need to add a folder using this "secret": ''fUS9i4Ps/g+MLohUPun1rEfK8b0A+ABQitckZiONwPZK5BPm1N/wYg==''

== How to report bugs ==

We have a [http://openspim.org/tickets/ ticket system]. If you [http://openspim.org/tickets/bug_report_page.php add new tickets], please make sure to

* the category is ''OpenSPIM''
* assign the ticket to yourself if you intend to solve it
* add a target version if you want the ticket to show up in the [http://openspim.org/tickets/roadmap_page.php roadmap]
* add a concise summary and additional useful information in the description
* if you need this ticket to be visible only to the core developers of OpenSPIM, mark it as 'private'

Once you added a ticket, you might want to go back to it and make it a child of a goal ticket in the ''Relationship'' box.

== Are there similar Open Access projects for life sciences? ==

[[FAQ#Other_Open_Access_projects|Yes!]]

= Software =

== How do I autostart µManager when Fiji starts? ==

In Fiji, run the command ''Plugins>Macros>Startup Macros...'' and add the following lines to the end:

 macro AutoRun {
        run("Micro-Manager Studio");
 }

== How do I autostart the OpenSPIM plugin when µManager starts up? ==

If you want the SPIM plugin to be called everytime when Micro-Manager starts, add the following lines to the ''Fiji.app/MMStartup.bsh'' file:

 setAccessibility(true);
 
 import org.micromanager.MMStudioMainFrame.PluginItem;
 for (PluginItem plugin : gui.plugins_)
         if (plugin.className.equals("SPIMAcquisition")) {
                 plugin.instantiate();
                 plugin.plugin.show();
         }

== How do I start µManager from the command-line? ==

There are two ways, really. The Fiji way:

 fiji-win32 --run Micro-Manager_Studio

Call the Studio directly, without first starting ImageJ:

 fiji-win32 --main-class=org.micromanager.MMStudioMainFrame

== Can I run OpenSPIM with Windows 7 or 8? ==

At the time of writing, only Windows XP is supported, because there are problems with the [http://www.dcamapi.com/ DCAM driver]. In our tests, it would install, but µManager was not able to find the camera on Windows 7.

== How can I build the OpenSPIM software myself? ==

Please have a look at [[How_to_build_the_software#The_easy_way|this page]].

= Debugging =

== Look at the CoreLog ==

Whatever you do, first have a look at the file CoreLog<date>.txt, located in Fiji.app/ or whatever directory Micro-Manager was started in.

== When Micro-Manager does not list the driver ==

# Make sure the .dll is present in ''bin_Win32/mm/Win32/''
# If you copied the driver from an independent micro-manager installation, make sure the micromanager version the driver comes from corresponds to  version embedded into OpenSpim. 
# Use the [http://www.dependencywalker.com/ Dependency Walker] to detect missing dependencies

== The driver for my hardware is not listed in OpenSPIM, but it supported by micro-manager ==
In ''theory'' any hardware supported by micro-manager should work in OpenSPIM. If the driver for your hardware is not listed in OpenSPIM, you can add it to the OpenSPIM driver list by copying the ''.dll'' to the ''/mm/Win32/'' folder. Watch out that the versions of micro-manager from which the drivers originates and the version of OpenSPIM your are using are compatible. For instance, OpenSPIM-20130131 is built on [http://valelab.ucsf.edu/~MM/MMwiki/index.php/Micro-Manager_Version_Archive micro-manager v1.4.9]

== Micro-Manager just crashes when I connect <device> ==

Micro-Manager's memory management is not very safe on the driver side. Try to start Fiji with less memory reserved for Java, e.g. ''--mem=512m''.

If that does not help, try to find out what's in [[#Look at the CoreLog|the core log]], and if that fails, too, you might have more luck [[#Using Visual Studio's interactive debugger]].

== Using Visual Studio's interactive debugger ==

Start Fiji, and before starting Micro-Manager use Visual Studio's ''Debug>Attach to Process...'' to attach to the process. After that, you may set breakpoints (optional) and then start Micro-Manager in Fiji.

== Using Eclipse to debug MicroManager/SPIM Acquisition ==

# Make sure you have [http://www.eclipse.org/ Eclipse] installed.
# Add Fiji's JRE to Eclipse: 
## Window -> Preferences; under Java, select Installed JREs and click Add...
### Use Standard VM.
### Set the JRE Home to ''Fiji.app/java/win32/jdk1.6.0_24'' (or similar). Eclipse should fill in the rest.
### Click Finish.
## Check the checkbox next to the newly-added JRE.
# Create a new project for Micro-Manager Studio:
## File -> New -> Java Project...
### Uncheck "Use Default Location"
### Point Location to ''/src/fiji/3rdparty/micromanager/mmstudio''
### Eclipse should auto-configure all sorts of useful things.
## Click Next.
### On the Libraries tab, click Add External JARs...
#### From ''/src/fiji/3rdparty/bin_Win32/jars/'':
####* bsh.jar
####* commons-math-2.0.jar
####* ij-<version>.jar
####* MMCoreJ.jar
####* MMAcqEngine.jar
####* swing-layout-1.0.4.jar
####* swingx-0.9.5.jar
## Click Finish.
# Create a project for SPIMAcquisition:
## File -> New -> Java Project...
### Uncheck "Use Default Location"
### Point Location to ''/src/fiji/3rdparty/micromanager/plugins/SPIMAcquisition''
### Let Eclipse auto-configure things.
## Click Next.
### On the Projects tab, click Add... and select the mmstudio project added above.
### On the Libraries tab, click Add External JARs...
#### From ''/src/fiji/3rdparty/bin_Win32/jars/'':
####* ij-<version>.jar
####* MMCoreJ.jar
## Click Finish.
# Depending on your workspace settings, you may need to reduce the enforced JRE level for both projects:
## Right click on each project and go to Properties.
## Select Java Compiler.
## Enable project-specific settings and set the Compiler Compliance Level to 1.6 (depending on the JDK used by Fiji).
## Click Apply then OK.
# Set up the debug configuration:
## Run -> Debug Configurations...
### Create a fresh launch configuration
### Use SPIMAcquisition as the project.
### For the Main class, click ''Search...'' and find ''ij.ImageJ''
### On the Arguments tab, under VM arguments, pass the following: <code>-Dplugin.dir=fiji/3rdparty/micromanager/bin_Win32</code> (modifying as appropriate).
### On the Classpath tab, select SPIMAcquisition, then Add External JARs...
#### From fiji/3rdparty/micromanager/dist/jars:
####* MMAcqEngine.jar
### Click Apply.
## Click Debug to make sure everything works.
